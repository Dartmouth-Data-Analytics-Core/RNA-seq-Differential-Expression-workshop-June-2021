col = ds.stats_reo_pdl$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d19 - downsampled")
lm1 <- summary(lm(ds.stats_reo_pdl$tsize.d19[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]))
lm2 <- summary(lm(ds.stats_reo_pdl$tsize.d19[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]))
abline(lm(ds.stats_reo_pdl$tsize.d19[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]), col = "#E7B800", lty = 2)
abline(lm(ds.stats_reo_pdl$tsize.d19[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]), col = "#FC4E07", lty = 2)
text(40000, 2200, paste0("reo - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#E7B800")
text(40000, 2140, paste0("reo - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#E7B800")
text(40000, 2000, paste0("anti-PDL1 - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#FC4E07")
text(40000, 1940, paste0("anti-PDL1 - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E07")
# diversity vs tumor size
png(paste0("~/BISR/fiering/combined2/", "diversity-vs-tumsize19-by-tx-group-downsampled.png"), width=15*ppi, height=7*ppi, res=ppi)
par(mfrow=c(1,2))
ds.stats_veh_both <- ds.stats[ds.stats$tx.group=="vehicle" | ds.stats$tx.group=="both",]
plot(ds.stats_veh_both$diversity, ds.stats_veh_both$tsize.d19,
xlab = "No. of clonotypes", ylab = "Tumor size - d19",
col = ds.stats_veh_both$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d19 - downsampled")
lm1 <- summary(lm(ds.stats_veh_both$tsize.d19[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]))
lm2 <- summary(lm(ds.stats_veh_both$tsize.d19[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]))
abline(lm(ds.stats_veh_both$tsize.d19[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(ds.stats_veh_both$tsize.d19[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(35000, 600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(35000, 540, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
text(35000, 400, paste0("Both - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(35000, 340, paste0("Both - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
ds.stats_reo_pdl <- ds.stats[ds.stats$tx.group=="reo" | ds.stats$tx.group=="anti-PDL1",]
plot(ds.stats_reo_pdl$diversity, ds.stats_reo_pdl$tsize.d19,
xlab = "No. of clonotypes", ylab = "Tumor size - d19",
col = ds.stats_reo_pdl$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d19 - downsampled")
lm1 <- summary(lm(ds.stats_reo_pdl$tsize.d19[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]))
lm2 <- summary(lm(ds.stats_reo_pdl$tsize.d19[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]))
abline(lm(ds.stats_reo_pdl$tsize.d19[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]), col = "#E7B800", lty = 2)
abline(lm(ds.stats_reo_pdl$tsize.d19[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]), col = "#FC4E07", lty = 2)
text(40000, 2200, paste0("reo - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#E7B800")
text(40000, 2140, paste0("reo - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#E7B800")
text(40000, 2000, paste0("anti-PDL1 - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#FC4E07")
text(40000, 1940, paste0("anti-PDL1 - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E07")
dev.off()
plot(stats_veh_both$diversity, stats_veh_both$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = stats_veh_both$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16")
lm1 <- summary(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="vehicle"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="vehicle"]))
lm2 <- summary(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="both"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="both"]))
abline(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="vehicle"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="both"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(36000, 1600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(36000, 1550, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
par(mfrow=c(1,2))
plot(stats_veh_both$diversity, stats_veh_both$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = stats_veh_both$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16")
lm1 <- summary(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="vehicle"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="vehicle"]))
lm2 <- summary(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="both"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="both"]))
abline(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="vehicle"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="both"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(120000, 1600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(120000, 1550, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
text(120000, 1450, paste0("Both - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(120000, 1400, paste0("Both - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
stats_reo_pdl <- stats[stats$tx.group=="reo" | stats$tx.group=="anti-PDL1",]
plot(stats_reo_pdl$diversity, stats_reo_pdl$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = stats_reo_pdl$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16")
lm1 <- summary(lm(stats_reo_pdl$tsize.d16[stats_reo_pdl$tx.group=="reo"] ~ stats_reo_pdl$diversity[stats_reo_pdl$tx.group=="reo"]))
lm2 <- summary(lm(stats_reo_pdl$tsize.d16[stats_reo_pdl$tx.group=="anti-PDL1"] ~ stats_reo_pdl$diversity[stats_reo_pdl$tx.group=="anti-PDL1"]))
abline(lm(stats_reo_pdl$tsize.d16[stats_reo_pdl$tx.group=="reo"] ~ stats_reo_pdl$diversity[stats_reo_pdl$tx.group=="reo"]), col = "#E7B800", lty = 2)
abline(lm(stats_reo_pdl$tsize.d16[stats_reo_pdl$tx.group=="anti-PDL1"] ~ stats_reo_pdl$diversity[stats_reo_pdl$tx.group=="anti-PDL1"]), col = "#FC4E07", lty = 2)
text(35000, 1600, paste0("reo - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#E7B800")
text(35000, 1550, paste0("reo - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#E7B800")
text(120000, 1600, paste0("reo - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#E7B800")
text(120000, 1550, paste0("reo - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#E7B800")
text(120000, 1450, paste0("anti-PDL1 - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#FC4E07")
text(120000, 1400, paste0("anti-PDL1 - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E07")
######## CLONOTYPE DIVERSITY VS. TX GROUP - day 16
# diversity vs tumor size
png(paste0("~/BISR/fiering/combined2/", "diversity-vs-tumsize16-by-tx-group.png"), width=15*ppi, height=7*ppi, res=ppi)
par(mfrow=c(1,2))
plot(stats_veh_both$diversity, stats_veh_both$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = stats_veh_both$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16")
lm1 <- summary(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="vehicle"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="vehicle"]))
lm2 <- summary(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="both"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="both"]))
abline(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="vehicle"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(stats_veh_both$tsize.d16[stats_veh_both$tx.group=="both"] ~ stats_veh_both$diversity[stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(120000, 1600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(120000, 1550, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
text(120000, 1450, paste0("Both - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(120000, 1400, paste0("Both - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
stats_reo_pdl <- stats[stats$tx.group=="reo" | stats$tx.group=="anti-PDL1",]
plot(stats_reo_pdl$diversity, stats_reo_pdl$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = stats_reo_pdl$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16")
lm1 <- summary(lm(stats_reo_pdl$tsize.d16[stats_reo_pdl$tx.group=="reo"] ~ stats_reo_pdl$diversity[stats_reo_pdl$tx.group=="reo"]))
lm2 <- summary(lm(stats_reo_pdl$tsize.d16[stats_reo_pdl$tx.group=="anti-PDL1"] ~ stats_reo_pdl$diversity[stats_reo_pdl$tx.group=="anti-PDL1"]))
abline(lm(stats_reo_pdl$tsize.d16[stats_reo_pdl$tx.group=="reo"] ~ stats_reo_pdl$diversity[stats_reo_pdl$tx.group=="reo"]), col = "#E7B800", lty = 2)
abline(lm(stats_reo_pdl$tsize.d16[stats_reo_pdl$tx.group=="anti-PDL1"] ~ stats_reo_pdl$diversity[stats_reo_pdl$tx.group=="anti-PDL1"]), col = "#FC4E07", lty = 2)
text(120000, 1600, paste0("reo - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#E7B800")
text(120000, 1550, paste0("reo - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#E7B800")
text(120000, 1450, paste0("anti-PDL1 - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#FC4E07")
text(120000, 1400, paste0("anti-PDL1 - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E07")
dev.off()
ds.stats_veh_both <- ds.stats[ds.stats$tx.group=="vehicle" | ds.stats$tx.group=="both",]
plot(ds.stats_veh_both$diversity, ds.stats_veh_both$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = ds.stats_veh_both$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16 - downsampled")
lm1 <- summary(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]))
lm2 <- summary(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]))
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(2000, 1600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(2000, 1550, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(40000, 1600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(40000, 1550, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
text(40000, 1450, paste0("Both - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(40000, 1400, paste0("Both - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
par(mfrow=c(1,2))
ds.stats_veh_both <- ds.stats[ds.stats$tx.group=="vehicle" | ds.stats$tx.group=="both",]
plot(ds.stats_veh_both$diversity, ds.stats_veh_both$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = ds.stats_veh_both$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16 - downsampled")
lm1 <- summary(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]))
lm2 <- summary(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]))
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(40000, 1600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(40000, 1550, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
text(40000, 1450, paste0("Both - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(40000, 1400, paste0("Both - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
ds.stats_reo_pdl <- ds.stats[ds.stats$tx.group=="reo" | ds.stats$tx.group=="anti-PDL1",]
plot(ds.stats_reo_pdl$diversity, ds.stats_reo_pdl$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = ds.stats_reo_pdl$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16 - downsampled")
lm1 <- summary(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]))
lm2 <- summary(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]))
abline(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]), col = "#E7B800", lty = 2)
abline(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]), col = "#FC4E07", lty = 2)
text(40000, 1600, paste0("reo - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#E7B800")
text(40000, 1550, paste0("reo - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#E7B800")
text(40000, 1450, paste0("anti-PDL1 - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#FC4E07")
text(40000, 1400, paste0("anti-PDL1 - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E07")
# diversity vs tumor size
png(paste0("~/BISR/fiering/combined2/", "diversity-vs-tumsize16-by-tx-group-downsampled.png"), width=15*ppi, height=7*ppi, res=ppi)
par(mfrow=c(1,2))
ds.stats_veh_both <- ds.stats[ds.stats$tx.group=="vehicle" | ds.stats$tx.group=="both",]
plot(ds.stats_veh_both$diversity, ds.stats_veh_both$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = ds.stats_veh_both$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16 - downsampled")
lm1 <- summary(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]))
lm2 <- summary(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]))
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(40000, 1600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(40000, 1550, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
text(40000, 1450, paste0("Both - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(40000, 1400, paste0("Both - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
ds.stats_reo_pdl <- ds.stats[ds.stats$tx.group=="reo" | ds.stats$tx.group=="anti-PDL1",]
plot(ds.stats_reo_pdl$diversity, ds.stats_reo_pdl$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = ds.stats_reo_pdl$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16 - downsampled")
lm1 <- summary(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]))
lm2 <- summary(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]))
abline(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]), col = "#E7B800", lty = 2)
abline(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]), col = "#FC4E07", lty = 2)
text(40000, 1600, paste0("reo - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#E7B800")
text(40000, 1550, paste0("reo - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#E7B800")
text(40000, 1450, paste0("anti-PDL1 - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#FC4E07")
text(40000, 1400, paste0("anti-PDL1 - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E07")
dev.off()
# diversity vs tumor size
png(paste0("~/BISR/fiering/combined2/", "diversity-vs-tumsize16-by-tx-group-downsampled.png"), width=15*ppi, height=7*ppi, res=ppi)
par(mfrow=c(1,2))
ds.stats_veh_both <- ds.stats[ds.stats$tx.group=="vehicle" | ds.stats$tx.group=="both",]
plot(ds.stats_veh_both$diversity, ds.stats_veh_both$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = ds.stats_veh_both$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16 - downsampled")
lm1 <- summary(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]))
lm2 <- summary(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]))
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="vehicle"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="vehicle"]), col = "#00AFBB", lty = 2)
abline(lm(ds.stats_veh_both$tsize.d16[ds.stats_veh_both$tx.group=="both"] ~ ds.stats_veh_both$diversity[ds.stats_veh_both$tx.group=="both"]), col = "#FC4E32", lty = 2)
text(40000, 1600, paste0("Vehicle - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(40000, 1550, paste0("Vehicle - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
text(40000, 1450, paste0("Both - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#00AFBB")
text(40000, 1400, paste0("Both - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E32")
ds.stats_reo_pdl <- ds.stats[ds.stats$tx.group=="reo" | ds.stats$tx.group=="anti-PDL1",]
plot(ds.stats_reo_pdl$diversity, ds.stats_reo_pdl$tsize.d16,
xlab = "No. of clonotypes", ylab = "Tumor size - d16",
col = ds.stats_reo_pdl$col1, las = 1, cex = 1.2, main = "Diversity vs tumor size d16 - downsampled")
lm1 <- summary(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]))
lm2 <- summary(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]))
abline(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="reo"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="reo"]), col = "#E7B800", lty = 2)
abline(lm(ds.stats_reo_pdl$tsize.d16[ds.stats_reo_pdl$tx.group=="anti-PDL1"] ~ ds.stats_reo_pdl$diversity[ds.stats_reo_pdl$tx.group=="anti-PDL1"]), col = "#FC4E07", lty = 2)
text(40000, 1600, paste0("reo - Slope = ", round(lm1$coefficients[2,1], digits = 3)), cex = 1.1, col = "#E7B800")
text(40000, 1550, paste0("reo - P-value = ", round(lm1$coefficients[2,4], digits = 2)), cex = 1.1, col = "#E7B800")
text(40000, 1450, paste0("anti-PDL1 - Slope = ", round(lm2$coefficients[2,1], digits = 3)), cex = 1.1, col = "#FC4E07")
text(40000, 1400, paste0("anti-PDL1 - P-value = ", round(lm2$coefficients[2,4], digits = 2)), cex = 1.1, col = "#FC4E07")
dev.off()
# set functiuon for plotting grouped boxplots
plot_single_boxplot <- function(df, feature, group1, type, title) {
plt <- ggviolin(df, x = group1, y = feature, fill = group1,
palette = c("#00AFBB", "#E7B800"),
add = c("boxplot"), alpha = 0.5)
plt <- plt + ggtitle(title) + theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
ppi=300
png(paste0("~/BISR/fiering/combined2/", feature, "-vs-", group1, "-", type, "_boxplot.png"), width=5.5*ppi, height=7*ppi, res=ppi)
print(plt)
dev.off()
plt
}
# generate plots
##### basic stats
plot_single_boxplot(stats, "count", "tx.status", NULL, "Read count vs. tx-status")
plot_single_boxplot(stats, "diversity", "tx.status", "Clonotype diversity vs. tx-status")
plot_single_boxplot(stats, "diversity", "tx.status", NULL, "Clonotype diversity vs. tx-status")
plot_single_boxplot(ds.stats, "count", "tx.status", NULL, "Read count vs. tx-status- Downsampled")
plot_single_boxplot(ds.stats, "diversity", "tx.status", NULL, "Clonotype diversity vs. tx-status - Downsampled")
##### diversity stats
### resampled
plot_single_boxplot(div.rs, "shannonWienerIndex_mean", "tx.status", "shannon Wiener Index vs. tx-status")
##### diversity stats
### resampled
plot_single_boxplot(div.rs, "shannonWienerIndex_mean", "tx.status", NULL, "shannon Wiener Index vs. tx-status")
plot_single_boxplot(div.rs, "normalizedShannonWienerIndex_mean", "tx.status", NULL, "normalized. shannon Wiener Index vs. tx-status")
plot_single_boxplot(div.rs, "inverseSimpsonIndex_mean", "tx.status", NULL, "Inverse Simpson Index vs. tx-status")
### downsampled
plot_single_boxplot(ds.div, "shannonWienerIndex_mean", "tx.status", "shannon Wiener Index vs. tx-status")
### downsampled
plot_single_boxplot(ds.div, "shannonWienerIndex_mean", "tx.status", NULL, "shannon Wiener Index vs. tx-status")
plot_single_boxplot(ds.div, "normalizedShannonWienerIndex_mean", "tx.status", NULL, "normalized. shannon Wiener Index vs. tx-status")
plot_single_boxplot(ds.div, "inverseSimpsonIndex_mean", "tx.status", NULL, "Inverse Simpson Index vs. tx-status")
# set function for plotting grouped boxplots
plot_group_boxplot <- function(df, feature, group1, group2, type, title) {
plt <- ggviolin(df, x = group1, y = feature, fill = group2,
palette = c("#00AFBB", "#E7B800", "#FC4E07", "#FC4E32"),
add = c("boxplot"), alpha = 0.5)
plt <- plt + ggtitle(title) + theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
ppi=300
png(paste0("~/BISR/fiering/combined2/", feature, "-vs-", group1, "-by-", group2, "-", type, "_boxplot.png"), width=7*ppi, height=7*ppi, res=ppi)
print(plt)
dev.off()
plt
}
# generate plots
##### basic stats
plot_group_boxplot(stats, "count", "tx.status", "tx.group", "Read count vs. tx-status & tx-group")
# generate plots
##### basic stats
plot_group_boxplot(stats, "count", "tx.status", "tx.group", NULL, "Read count vs. tx-status & tx-group")
# generate plots
##### basic stats
plot_group_boxplot(stats, "count", "tx.status", "tx.group", NULL, "Read count vs. tx-status & tx-group")
plot_group_boxplot(stats, "diversity", "tx.status", "tx.group", NULL, "Clonotype diversity vs. tx-status & tx-group")
plot_group_boxplot(ds.stats, "count", "tx.status", "tx.group", NULL, "Read count vs. tx-status & tx-group - Downsampled")
plot_group_boxplot(ds.stats, "diversity", "tx.status", "tx.group", NULL, "Clonotype diversity vs. tx-status & tx-group - Downsampled")
##### diversity stats
### resampled
plot_group_boxplot(div.rs, "shannonWienerIndex_mean", "tx.status", "tx.group", "shannon Wiener Index vs. tx-status")
##### diversity stats
### resampled
plot_group_boxplot(div.rs, "shannonWienerIndex_mean", "tx.status", "tx.group", NULL, "shannon Wiener Index vs. tx-status")
plot_group_boxplot(div.rs, "normalizedShannonWienerIndex_mean", "tx.status", "tx.group", NULL, "normalized. shannon Wiener Index vs. tx-status")
plot_group_boxplot(div.rs, "inverseSimpsonIndex_mean", "tx.status", "tx.group", NULL, "Inverse Simpson Index vs. tx-status")
### downsampled
plot_group_boxplot(ds.div, "shannonWienerIndex_mean", "tx.status", "tx.group", NULL, "shannon Wiener Index vs. tx-status")
plot_group_boxplot(ds.div, "normalizedShannonWienerIndex_mean", "tx.status", "tx.group", NULL, "normalized. shannon Wiener Index vs. tx-status")
plot_group_boxplot(ds.div, "inverseSimpsonIndex_mean", "tx.status", "tx.group", NULL, "Inverse Simpson Index vs. tx-status")
# write function to plot histogram
plot_multi_histogram <- function(df, feature, label_column) {
plt <- ggplot(df, aes(x=eval(parse(text=feature)), fill=eval(parse(text=label_column)))) +
geom_histogram(alpha=0.4, position="identity", bins = 25, color="black") +
labs(x=feature, y = "Density")
plt <- plt + guides(fill=guide_legend(title=paste0(label_column)))
ppi=300
png(paste0("~/BISR/fiering/combined2/", feature, "_histogram.png"), width=8*ppi, height=7*ppi, res=ppi)
print(plt)
dev.off()
plt
}
# generate plots
plot_multi_histogram(stats, "mean_cdr3nt_length", "tx.status")
plot_multi_histogram(stats, "mean_insert_size", "tx.status")
plot_multi_histogram(stats, "mean_ndn_size", "tx.status")
extract_expanded_clone_nos <- function(x){
message("running", paste0(x))
diff.abund <- read.csv(paste0("~/BISR/fiering/combined2/diff-abund/", x), stringsAsFactors = F)
# number of newly expanded clones
new <- sum(diff.abund$A_count==0)
# number of expanded clones
sig_exp <- nrow(diff.abund[diff.abund$type=="B > A" & !is.na(diff.abund$qvalue) & diff.abund$qvalue<=0.05,])
# fraction newly expanded at time point 2
f_new <- new/(new+sig_exp)
# return list containing all results
list("New clones" = new,
"Significantly expanded" = sig_exp,
"Fraction new clones" = f_new)
}
# get vector of diff abundance results files
d_abund_files <- list.files("~/BISR/fiering/combined2/diff-abund/", pattern = "diff-abundance-results-mouse*")
d_abund_files
# calcuklate % change diversity
ds.div.sub$mouse <- as.factor(ds.div.sub$mouse)
perc_change <- c()
for(i in 1:length(levels(ds.div.sub$mouse))){
mouse_tmp <- levels(ds.div.sub$mouse)[i]
div1 <- ds.div.sub$diversity[ds.div.sub$tx.status=="pre" & ds.div.sub$mouse==mouse_tmp]
div2 <- ds.div.sub$diversity[ds.div.sub$tx.status=="post" & ds.div.sub$mouse==mouse_tmp]
change <- div2-div1
perc_change[i] <- (change/(div1))*100
}
perc_change
names(perc_change) <- levels(ds.div.sub$mouse)
df_pc <- data.frame(mouse = names(perc_change),
pc = perc_change,
tx.status = "post",
tx.group = NA)
df_pc$tx.group <- factor(df_pc$tx.group, levels=levels(ds.div.sub$tx.group))
for(i in 1:nrow(df_pc)){
mouse_tmp <- df_pc$mouse[i]
df_pc$tx.group[i] <- ds.div.sub$tx.group[ds.div.sub$mouse == mouse_tmp][1]
}
plot_single_boxplot(df_pc, "pc", "tx.status", "Percent change - all mice")
plot_single_boxplot(df_pc, "pc", "tx.status", NULL, "Percent change - all mice")
plot_group_boxplot(df_pc, "pc", "tx.status", "tx.group", NULL, "Percent change - by tx.group")
clonality <- read.csv(paste0("~/BISR/fiering/combined2/sample-clonality.csv"), header=T, stringsAsFactors = F)
morisita <- read.csv(paste0("~/BISR/fiering/combined2/morisita_index.csv"), header=T, stringsAsFactors = F)
a.stats <- read.table(paste0("~/BISR/fiering/combined/alignment.stats.txt"), sep="\t", header=T, stringsAsFactors = F)
metadata <- read.table(paste0("~/BISR/fiering/combined/metadata.ALL.txt"), sep="\t", header=T, stringsAsFactors = F)
# extract base seq. sample name from metadata
metadata$sample.id.sub <- sapply(metadata$file.name, function(x) strsplit(x, "vdj\\.")[[1]][2])
metadata$sample.id.sub.2 <- sapply(metadata$sample.id.sub, function(x) strsplit(x, "\\.")[[1]][1])
#
a.stats$sample.id <- NA
for(i in 1:nrow(a.stats)){
tmp.name <- metadata$sample.id[match(a.stats$sample[i], metadata$sample.id.sub.2)]
a.stats$sample.id[i] <- tmp.name
}
# remove missing samples
a.stats <- a.stats[!is.na(a.stats$sample.id),]
# plot alignments
p <- ggplot(data=a.stats, aes(x=sample.id, y=alignment.percent)) +
geom_bar(stat="identity", fill="steelblue")+
xlab("Sample") + ylab("Successfully aligned reads (%)") +
geom_text(aes(label=round(alignment.percent, digits = 0)), vjust=1.6, color="white", size=2.7)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
ppi=300
png(paste0("~/BISR/fiering/combined/", "alignment-stats.png"), width=12*ppi, height=7*ppi, res=ppi)
print(p)
dev.off()
library(ggpubr)
### basic stats
stats_run1 <- read.table(paste0("~/BISR/fiering/combined/basicstats.txt"), sep="\t", header=T, stringsAsFactors = F)
stats <- read.table(paste0("~/BISR/fiering/combined2/basicstats.txt"), sep="\t", header=T, stringsAsFactors = F)
ds.stats <- read.table(paste0("~/BISR/fiering/combined2/ds.basicstats.txt"), sep="\t", header=T, stringsAsFactors = F)
### diversity stats
div <- read.table(paste0("~/BISR/fiering/combined2/diversity.strict.exact.txt"), sep="\t", header=T, stringsAsFactors = F)
div.rs <- read.table(paste0("~/BISR/fiering/combined2/diversity.strict.resampled.txt"), sep="\t", header=T, stringsAsFactors = F)
ds.div <- read.table(paste0("~/BISR/fiering/combined2/ds.diversity.strict.exact.txt"), sep="\t", header=T, stringsAsFactors = F)
# manually check counts
stats$count[order(stats$count)]
a.stats <- read.table(paste0("~/BISR/fiering/combined2/alignment.stats.txt"), sep="\t", header=T, stringsAsFactors = F)
metadata <- read.table(paste0("~/BISR/fiering/combined2/metadata.ALL.txt"), sep="\t", header=T, stringsAsFactors = F)
# extract base seq. sample name from metadata
metadata$sample.id.sub <- sapply(metadata$file.name, function(x) strsplit(x, "vdj\\.")[[1]][2])
metadata$sample.id.sub.2 <- sapply(metadata$sample.id.sub, function(x) strsplit(x, "\\.")[[1]][1])
library(ggplot2)
a.stats <- read.table(paste0("~/BISR/fiering/combined2/alignment.stats.txt"), sep="\t", header=T, stringsAsFactors = F)
a.stats <- read.table(paste0("~/BISR/fiering/combined2/alignment.stats.txt"), sep="\t", header=T, stringsAsFactors = F)
metadata <- read.table(paste0("~/BISR/fiering/combined2/metadata.ALL.txt"), sep="\t", header=T, stringsAsFactors = F)
metadata <- read.table(paste0("~/BISR/fiering/combined2/metadata.ALL.txt"), sep="\t", header=T, stringsAsFactors = F)
# extract base seq. sample name from metadata
metadata$sample.id.sub <- sapply(metadata$file.name, function(x) strsplit(x, "vdj\\.")[[1]][2])
metadata$sample.id.sub.2 <- sapply(metadata$sample.id.sub, function(x) strsplit(x, "\\.")[[1]][1])
#
a.stats$sample.id <- NA
for(i in 1:nrow(a.stats)){
tmp.name <- metadata$sample.id[match(a.stats$sample[i], metadata$sample.id.sub.2)]
a.stats$sample.id[i] <- tmp.name
}
# remove missing samples
a.stats <- a.stats[!is.na(a.stats$sample.id),]
# plot alignments
p <- ggplot(data=a.stats, aes(x=sample.id, y=alignment.percent)) +
geom_bar(stat="identity", fill="steelblue")+
xlab("Sample") + ylab("Successfully aligned reads (%)") +
geom_text(aes(label=round(alignment.percent, digits = 0)), vjust=1.6, color="white", size=2.7)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
ppi=300
png(paste0("~/BISR/fiering/combined2/", "alignment-stats.png"), width=12*ppi, height=7*ppi, res=ppi)
print(p)
dev.off()
plot (stats$count, stats$diversity/1e3,
xlab = "Read count", ylab = "Clonotype no. (thousands)",
col = "indianred", las = 1, cex = 1.2, main = "Clonotype no. vs read count")
# remove samples with less reads than the smallest good qualityh sample
stats <- stats[stats$count > (88844-1),]
### basic stats
stats_run1 <- read.table(paste0("~/BISR/fiering/combined/basicstats.txt"), sep="\t", header=T, stringsAsFactors = F)
stats <- read.table(paste0("~/BISR/fiering/combined2/basicstats.txt"), sep="\t", header=T, stringsAsFactors = F)
plot (stats$count, stats$diversity/1e3,
xlab = "Read count", ylab = "Clonotype no. (thousands)",
col = "indianred", las = 1, cex = 1.2, main = "Clonotype no. vs read count")
dev.off()
plot (stats$count, stats$diversity/1e3,
xlab = "Read count", ylab = "Clonotype no. (thousands)",
col = "indianred", las = 1, cex = 1.2, main = "Clonotype no. vs read count")
plot (stats$count, stats$diversity/1e3,
xlab = "Read count", ylab = "Clonotype no. (thousands)",
col = "indianred", las = 1, cex = 1.2, main = "Clonotype no. vs read count")
#xlim=c(0, 150000))
abline(v=88844, lty=2, lwd =1.2, col="cornflowerblue")
#xlim=c(0, 150000))
abline(v=88844, lty=2, lwd =1.2, col="black")
plot (stats$count, stats$diversity/1e3,
xlab = "Read count", ylab = "Clonotype no. (thousands)",
col = "indianred", las = 1, cex = 1.2, main = "Clonotype no. vs read count", xlim=c(0,150000))
#xlim=c(0, 150000))
abline(v=88844, lty=2, lwd =1.2, col="black")
png(paste0("~/BISR/fiering/combined2/", "count-vs-diversity_150K-sub.png"), width=7*ppi, height=7*ppi, res=ppi)
plot (stats$count, stats$diversity/1e3,
xlab = "Read count", ylab = "Clonotype no. (thousands)",
col = "indianred", las = 1, cex = 1.2, main = "Clonotype no. vs read count", xlim=c(0,150000))
#xlim=c(0, 150000))
abline(v=88844, lty=2, lwd =1.2, col="black")
#abline(v=1000000, lty=2, lwd =1.2, col="cornflowerblue")
#abline(v=5000000, lty=2, lwd =1.2, col="cornflowerblue")
dev.off()
# diversity vs tumor size
png(paste0("~/BISR/fiering/combined2/", "diversity-vs-tumsize-day19.png"), width=7*ppi, height=7*ppi, res=ppi)
#abline(v=1000000, lty=2, lwd =1.2, col="cornflowerblue")
#abline(v=5000000, lty=2, lwd =1.2, col="cornflowerblue")
dev.off()
ppi=300
png(paste0("~/BISR/fiering/combined2/", "count-vs-diversity.png"), width=7*ppi, height=7*ppi, res=ppi)
plot (stats$count, stats$diversity/1e3,
xlab = "Read count", ylab = "Clonotype no. (thousands)",
col = "indianred", las = 1, cex = 1.2, main = "Clonotype no. vs read count")
#xlim=c(0, 150000))
abline(v=88844, lty=2, lwd =1.2, col="black")
#abline(v=1000000, lty=2, lwd =1.2, col="cornflowerblue")
#abline(v=5000000, lty=2, lwd =1.2, col="cornflowerblue")
dev.off()
# generate plots
##### basic stats
plot_single_boxplot(stats, "count", "tx.status", NULL, "Read count vs. tx-status")
# set functiuon for plotting grouped boxplots
plot_single_boxplot <- function(df, feature, group1, type, title) {
plt <- ggviolin(df, x = group1, y = feature, fill = group1,
palette = c("#00AFBB", "#E7B800"),
add = c("boxplot"), alpha = 0.5)
plt <- plt + ggtitle(title) + theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
ppi=300
png(paste0("~/BISR/fiering/combined2/", feature, "-vs-", group1, "-", type, "_boxplot.png"), width=5.5*ppi, height=7*ppi, res=ppi)
print(plt)
dev.off()
plt
}
# generate plots
##### basic stats
plot_single_boxplot(stats, "count", "tx.status", NULL, "Read count vs. tx-status")
plot_single_boxplot(ds.stats, "count", "tx.status", NULL, "Read count vs. tx-status- Downsampled")
plot_single_boxplot(ds.stats, "diversity", "tx.status", NULL, "Clonotype diversity vs. tx-status - Downsampled")
# remove samples with less reads than the smallest good qualityh sample
stats <- stats[stats$count > (88844-1),]
stats_run1 <- stats_run1[stats_run1$count > 1000,]
ds.stats <- ds.stats[ds.stats$count > (88844-1),]
div <- div[div$reads > (88844-1),]
div.rs <- div.rs[div.rs$reads > (88844-1),]
ds.div <- ds.div[ds.div$reads > (88844-1),]
# set variables of interest as factors
stats$tx.status <- factor(stats$tx.status, levels = c("pre", "post"))
stats$tx.group <- factor(stats$tx.group, levels = c("vehicle", "reo", "anti-PDL1", "both"))
ds.stats$tx.status <- factor(ds.stats$tx.status, levels = c("pre", "post"))
ds.stats$tx.group <- factor(ds.stats$tx.group, levels = c("vehicle", "reo", "anti-PDL1", "both"))
div$tx.status <- factor(div$tx.status, levels = c("pre", "post"))
div$tx.group <- factor(div$tx.group, levels = c("vehicle", "reo", "anti-PDL1", "both"))
div.rs$tx.status <- factor(div.rs$tx.status, levels = c("pre", "post"))
div.rs$tx.group <- factor(div.rs$tx.group, levels = c("vehicle", "reo", "anti-PDL1", "both"))
ds.div$tx.status <- factor(ds.div$tx.status, levels = c("pre", "post"))
ds.div$tx.group <- factor(ds.div$tx.group, levels = c("vehicle", "reo", "anti-PDL1", "both"))
# set functiuon for plotting grouped boxplots
plot_single_boxplot <- function(df, feature, group1, type, title) {
plt <- ggviolin(df, x = group1, y = feature, fill = group1,
palette = c("#00AFBB", "#E7B800"),
add = c("boxplot"), alpha = 0.5)
plt <- plt + ggtitle(title) + theme(plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
ppi=300
png(paste0("~/BISR/fiering/combined2/", feature, "-vs-", group1, "-", type, "_boxplot.png"), width=5.5*ppi, height=7*ppi, res=ppi)
print(plt)
dev.off()
plt
}
# generate plots
##### basic stats
plot_single_boxplot(stats, "count", "tx.status", NULL, "Read count vs. tx-status")
plot_single_boxplot(stats, "diversity", "tx.status", NULL, "Clonotype diversity vs. tx-status")
plot_single_boxplot(ds.stats, "count", "tx.status", NULL, "Read count vs. tx-status- Downsampled")
plot_single_boxplot(ds.stats, "diversity", "tx.status", NULL, "Clonotype diversity vs. tx-status - Downsampled")
# generate plots
##### basic stats
plot_single_boxplot(stats, "count", "tx.status", NULL, "Read count vs. tx-status")
plot_single_boxplot(stats, "diversity", "tx.status", NULL, "Clonotype diversity vs. tx-status")
plot_single_boxplot(ds.stats, "count", "tx.status", "ds", "Read count vs. tx-status- Downsampled")
plot_single_boxplot(ds.stats, "diversity", "tx.status", "ds", "Clonotype diversity vs. tx-status - Downsampled")
stats <- read.table(paste0("~/BISR/fiering/combined2/basicstats.txt"), sep="\t", header=T, stringsAsFactors = F)
# manually check counts
stats$count[order(stats$count),]
# manually check counts
stats[order(stats$count),]
median(stats$count)
R.version
